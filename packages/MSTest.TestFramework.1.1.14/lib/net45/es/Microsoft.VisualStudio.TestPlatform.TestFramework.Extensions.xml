<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.TestPlatform.TestFramework.Extensions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute">
            <summary>
            Used to specify deployment item (file or directory) for per-test deployment.
            Can be specified on test class or test method.
            Can have multiple instances of the attribute to specify more than one item.
            The item path can be absolute or relative, if relative, it is relative to RunConfig.RelativePathRoot.
            </summary>
            <example>
            [DeploymentItem("file1.xml")]
            [DeploymentItem("file2.xml", "DataFiles")]
            [DeploymentItem("bin\Debug")]
            </example>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute"/> class.
            </summary>
            <param name="path">The file or directory to deploy. The path is relative to the build output directory. The item will be copied to the same directory as the deployed test assemblies.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute"/> class
            </summary>
            <param name="path">The relative or absolute path to the file or directory to deploy. The path is relative to the build output directory. The item will be copied to the same directory as the deployed test assemblies.</param>
            <param name="outputDirectory">The path of the directory to which the items are to be copied. It can be either absolute or relative to the deployment directory. All files and directories identified by <paramref name="path"/> will be copied to this directory.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.Path">
            <summary>
            Gets the path of the source file or folder to be copied.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DeploymentItemAttribute.OutputDirectory">
            <summary>
            Gets the path of the directory to which the item is copied.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames">
            <summary>
            Contiene literales para los nombres de las secciones, propiedades y atributos.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.SectionName">
            <summary>
            The configuration section name.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.Beta2SectionName">
            <summary>
            The configuration section name for Beta2. Left around for compat.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.DataSourcesSectionName">
            <summary>
            Section name for Data source.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.NameAttributeName">
            <summary>
            Attribute name for 'Name'
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.ConnectionStringAttributeName">
            <summary>
            Attribute name for 'ConnectionString'
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.DataAccessMethodAttributeName">
            <summary>
            Attrbiute name for 'DataAccessMethod'
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.ConfigurationNames.DataTableAttributeName">
            <summary>
            Attribute name for 'DataTable'
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement">
            <summary>
            El elemento de origen de datos.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.Name">
            <summary>
            Gets or sets the name of this configuration.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.ConnectionString">
            <summary>
            Gets or sets the ConnectionStringSettings element in &lt;connectionStrings&gt; section in the .config file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataTableName">
            <summary>
            Gets or sets the name of the data table.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.DataAccessMethod">
            <summary>
            Gets or sets the type of data access.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.Key">
            <summary>
            Gets the key name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement.Properties">
            <summary>
            Obtiene las propiedades de configuración.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection">
            <summary>
            Colección de elementos del origen de datos.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.String)">
            <summary>
            Devuelve el elemento de configuración con la clave especificada.
            </summary>
            <param name="name">Clave del elemento que se va a devolver.</param>
            <returns>Objeto System.Configuration.ConfigurationElement con la clave especificada. De lo contrario, NULL.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Item(System.Int32)">
            <summary>
            Obtiene el elemento de configuración en la ubicación del índice especificada.
            </summary>
            <param name="index">Ubicación del índice del objeto System.Configuration.ConfigurationElement que se va a devolver.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Add(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
            <summary>
            Agrega un elemento de configuración a la colección de elementos de configuración.
            </summary>
            <param name="element">Objeto System.Configuration.ConfigurationElement que se va a agregar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement)">
            <summary>
            Quita un objeto System.Configuration.ConfigurationElement de la colección.
            </summary>
            <param name="element">El <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement"/>.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Remove(System.String)">
            <summary>
            Quita un objeto System.Configuration.ConfigurationElement de la colección.
            </summary>
            <param name="name">Clave del objeto System.Configuration.ConfigurationElement que se va a quitar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.Clear">
            <summary>
            Quita todos los objetos del elemento de configuración de la colección.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.CreateNewElement">
            <summary>
            Crea un nuevo <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement"/>.
            </summary>
            <returns>Un nuevo objeto <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElement"/>.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene la clave de un elemento de configuración especificado.
            </summary>
            <param name="element">Objeto System.Configuration.ConfigurationElement para el que se va a devolver la clave.</param>
            <returns>Elemento System.Object que actúa como clave del objeto System.Configuration.ConfigurationElement especificado.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Agrega un elemento de configuración a la colección de elementos de configuración.
            </summary>
            <param name="element">Objeto System.Configuration.ConfigurationElement que se va a agregar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
            <summary>
            Agrega un elemento de configuración a la colección de elementos de configuración.
            </summary>
            <param name="index">Ubicación del índice en la que se va a agregar el objeto System.Configuration.ConfigurationElement especificado.</param>
            <param name="element">Objeto System.Configuration.ConfigurationElement que se va a agregar.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration">
            <summary>
            Compatibilidad con las opciones de configuración para las pruebas.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfiguration.ConfigurationSection">
            <summary>
            Obtiene la sección de configuración de las pruebas.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection">
            <summary>
            Sección de configuración de las pruebas.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.DataSources">
            <summary>
            Gets the data sources for this configuration section.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestConfigurationSection.Properties">
            <summary>
            Obtiene la colección de propiedades.
            </summary>
            <returns>
 <see cref="T:System.Configuration.ConfigurationPropertyCollection"/> de propiedades para el elemento.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject">
            <summary>
            This class represents the live NON public INTERNAL object in the system
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that contains
            the already existing object of the private class
            </summary>
            <param name="obj"> objeto que sirve como punto de partida para llegar a los miembros privados</param>
            <param name="memberToAccess">Cadena de desreferencia que usa . para apuntar al objeto que se va a recuperar, como en m_X.m_Y.m_Z</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps the
            specified type.
            </summary>
            <param name="assemblyName">Name of the assembly</param>
            <param name="typeName">nombre completo</param>
            <param name="args">Argumentos para pasar al constructor</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.String,System.String,System.Type[],System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps the
            specified type.
            </summary>
            <param name="assemblyName">Name of the assembly</param>
            <param name="typeName">nombre completo</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el constructor que se va a obtener</param>
            <param name="args">Argumentos para pasar al constructor</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps the
            specified type.
            </summary>
            <param name="type">tipo del objeto que se va a crear</param>
            <param name="args">Argumentos para pasar al constructor</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Type,System.Type[],System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps the
            specified type.
            </summary>
            <param name="type">tipo del objeto que se va a crear</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el constructor que se va a obtener</param>
            <param name="args">Argumentos para pasar al constructor</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps
            the given object.
            </summary>
            <param name="obj">objeto para encapsular</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.#ctor(System.Object,Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject"/> class that wraps
            the given object.
            </summary>
            <param name="obj">objeto para encapsular</param>
            <param name="type">Objeto PrivateType</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Target">
            <summary>
            Gets or sets the target
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.RealType">
            <summary>
            Gets the type of underlying object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetHashCode">
            <summary>
            devuelve el código hash del objeto de destino
            </summary>
            <returns>valor int que representa el código hash del objeto de destino</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Equals(System.Object)">
            <summary>
            Igual a
            </summary>
            <param name="obj">Objeto con el que se va a comparar</param>
            <returns>returns true if the objects are equal.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Type[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="typeArguments">Matriz de tipos correspondientes a los tipos de los argumentos genéricos.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="culture">Información de referencia cultural</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="culture">Información de referencia cultural</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="culture">Información de referencia cultural</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Name of the method</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="culture">Información de referencia cultural</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.Invoke(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
            <summary>
            Invoca el método especificado
            </summary>
            <param name="name">Nombre del método</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a obtener.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <param name="culture">Información de referencia cultural</param>
            <param name="typeArguments">Matriz de tipos correspondientes a los tipos de los argumentos genéricos.</param>
            <returns>Resultado de la llamada al método</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Int32[])">
            <summary>
            Gets the array element using array of subsrcipts for each dimension
            </summary>
            <param name="name">Name of the member</param>
            <param name="indices">los índices de la matriz</param>
            <returns>An arrya of elements.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Object,System.Int32[])">
            <summary>
            Sets the array element using array of subsrcipts for each dimension
            </summary>
            <param name="name">Name of the member</param>
            <param name="value">Valor para establecer</param>
            <param name="indices">los índices de la matriz</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
            <summary>
            Gets the array element using array of subsrcipts for each dimension
            </summary>
            <param name="name">Name of the member</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="indices">los índices de la matriz</param>
            <returns>An arrya of elements.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
            <summary>
            Sets the array element using array of subsrcipts for each dimension
            </summary>
            <param name="name">Name of the member</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="value">Valor para establecer</param>
            <param name="indices">los índices de la matriz</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String)">
            <summary>
            Obtiene el campo
            </summary>
            <param name="name">Name of the field</param>
            <returns>The field.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Object)">
            <summary>
            Establece el campo
            </summary>
            <param name="name">Name of the field</param>
            <param name="value">valor para establecer</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetField(System.String,System.Reflection.BindingFlags)">
            <summary>
            Obtiene el campo
            </summary>
            <param name="name">Name of the field</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <returns>The field.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetField(System.String,System.Reflection.BindingFlags,System.Object)">
            <summary>
            Establece el campo
            </summary>
            <param name="name">Name of the field</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="value">valor para establecer</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String)">
            <summary>
            Obtiene el campo o la propiedad
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <returns>The field or property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Object)">
            <summary>
            Establece el campo o la propiedad
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="value">valor para establecer</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetFieldOrProperty(System.String,System.Reflection.BindingFlags)">
            <summary>
            Obtiene el campo o la propiedad
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <returns>The field or property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
            <summary>
            Establece el campo o la propiedad
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="value">valor para establecer</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Object[])">
            <summary>
            Obtiene la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Type[],System.Object[])">
            <summary>
            Obtiene la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Object,System.Object[])">
            <summary>
            Establecer la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="value">valor para establecer</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Type[],System.Object,System.Object[])">
            <summary>
            Establecer la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="value">valor para establecer</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Obtiene la propiedad
            </summary>
            <param name="name">Name of the property</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
            <summary>
            Obtiene la propiedad
            </summary>
            <param name="name">Name of the property</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
            <summary>
            Establece la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="value">valor para establecer</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.SetProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
            <summary>
            Establece la propiedad
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Máscara de bits que consta de uno o más objetos <see cref="T:System.Reflection.BindingFlags"/> que especifican cómo se realiza la búsqueda.</param>
            <param name="value">valor para establecer</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.ValidateAccessString(System.String)">
            <summary>
            Valida la cadena de acceso
            </summary>
            <param name="access"> cadena de acceso</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.InvokeHelper(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el miembro
            </summary>
            <param name="name">Name of the member</param>
            <param name="bindingFlags">Atributos adicionales</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject.GetGenericMethodFromCache(System.String,System.Type[],System.Type[],System.Reflection.BindingFlags,System.Reflection.ParameterModifier[])">
            <summary>
            Extrae la signatura de método genérico más adecuada del tipo privado actual.
            </summary>
            <param name="methodName">Nombre del método donde se va a buscar la memoria caché de signatura.</param>
            <param name="parameterTypes">Matriz de tipos correspondientes a los tipos de los parámetros donde buscar.</param>
            <param name="typeArguments">Matriz de tipos correspondientes a los tipos de los argumentos genéricos.</param>
            <param name="bindingFlags"><see cref="T:System.Reflection.BindingFlags"/> para filtrar aún más las signaturas de método.</param>
            <param name="modifiers">Modifiers for parameters.</param>
            <returns>A methodinfo instance.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType">
            <summary>
            This class represents a private class for the Private Accessor functionality.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.BindToEveryThing">
            <summary>
            Se enlaza a todo
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.type">
            <summary>
            The wrapped type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType"/> class that contains the private type.
            </summary>
            <param name="assemblyName">Nombre del ensamblado</param>
            <param name="typeName">nombre completo de </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType"/> class that contains
            the private type from the type object
            </summary>
            <param name="type">Tipo encapsulado que se va a crear.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.ReferencedType">
            <summary>
            Obtiene el tipo al que se hace referencia
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[])">
            <summary>
            Invoca al miembro estático
            </summary>
            <param name="name">Nombre del miembro para InvokeHelper</param>
            <param name="args">Argumentos para la invocación</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[])">
            <summary>
            Invoca al miembro estático
            </summary>
            <param name="name">Nombre del miembro para InvokeHelper</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Type[])">
            <summary>
            Invoca al miembro estático
            </summary>
            <param name="name">Nombre del miembro para InvokeHelper</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="typeArguments">Matriz de tipos correspondientes a los tipos de los argumentos genéricos.</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Name of the member</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Type[],System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Name of the member</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Información de referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Name of the member</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <param name="args">Argumentos para la invocación</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Name of the member</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Nombre del miembro</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Nombre del miembro</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            /// <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeStatic(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[],System.Globalization.CultureInfo,System.Type[])">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Nombre del miembro</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            /// <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para el método que se va a invocar</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <param name="typeArguments">Matriz de tipos correspondientes a los tipos de los argumentos genéricos.</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Int32[])">
            <summary>
            Obtiene el elemento en la matriz estática
            </summary>
            <param name="name">Name of the array</param>
            <param name="indices">
            Matriz unidimensional de enteros de 32 bits que representan los índices que especifican
            la posición del elemento que se va a obtener. Por ejemplo, para acceder a a[10][11], los índices serían {10,11}
            </param>
            <returns>elemento en la ubicación especificada</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Object,System.Int32[])">
            <summary>
            Establece el miembro de la matriz estática
            </summary>
            <param name="name">Name of the array</param>
            <param name="value">valor para establecer</param>
            <param name="indices">
            Matriz unidimensional de enteros de 32 bits que representan los índices que especifican
            la posición del elemento que se va a establecer. Por ejemplo, para acceder a a[10][11], la matriz sería {10,11}
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Int32[])">
            <summary>
            Gets the element in satatic array
            </summary>
            <param name="name">Name of the array</param>
            <param name="bindingFlags">Atributos InvokeHelper adicionales</param>
            <param name="indices">
            Matriz unidimensional de enteros de 32 bits que representan los índices que especifican
            la posición del elemento que se va a obtener. Por ejemplo, para acceder a a[10][11], la matriz sería {10,11}
            </param>
            <returns>elemento en la ubicación especificada</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticArrayElement(System.String,System.Reflection.BindingFlags,System.Object,System.Int32[])">
            <summary>
            Establece el miembro de la matriz estática
            </summary>
            <param name="name">Name of the array</param>
            <param name="bindingFlags">Atributos InvokeHelper adicionales</param>
            <param name="value">valor para establecer</param>
            <param name="indices">
            Matriz unidimensional de enteros de 32 bits que representan los índices que especifican
            la posición del elemento que se va a establecer. Por ejemplo, para acceder a a[10][11], la matriz sería {10,11}
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String)">
            <summary>
            Obtiene el campo estático
            </summary>
            <param name="name">Nombre del campo</param>
            <returns>The static field.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Object)">
            <summary>
            Establece el campo estático
            </summary>
            <param name="name">Nombre del campo</param>
            <param name="value">Argumento para la invocación</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticField(System.String,System.Reflection.BindingFlags)">
            <summary>
            Obtiene el campo estático con los atributos InvokeHelper especificados
            </summary>
            <param name="name">Nombre del campo</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <returns>The static field.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticField(System.String,System.Reflection.BindingFlags,System.Object)">
            <summary>
            Establece el campo estático con atributos de enlace
            </summary>
            <param name="name">Nombre del campo</param>
            <param name="bindingFlags">Atributos InvokeHelper adicionales</param>
            <param name="value">Argumento para la invocación</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String)">
            <summary>
            Obtiene la propiedad o campo estático
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <returns>The static field or property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Object)">
            <summary>
            Establece la propiedad o el campo estático
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags)">
            <summary>
            Obtiene la propiedad o campo estático con los atributos InvokeHelper especificados
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <returns>The static field or property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticFieldOrProperty(System.String,System.Reflection.BindingFlags,System.Object)">
            <summary>
            Establece la propiedad o campo estático con los atributos de enlace
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Object[])">
            <summary>
            Obtiene la propiedad estática
            </summary>
            <param name="name">Nombre del campo o propiedad</param>
            <param name="args">Argumentos para la invocación</param>
            <returns>The static property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Object[])">
            <summary>
            Establece la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Object,System.Type[],System.Object[])">
            <summary>
            Establece la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Obtiene la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The static property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.GetStaticProperty(System.String,System.Reflection.BindingFlags,System.Type[],System.Object[])">
            <summary>
            Obtiene la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales.</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
            <returns>The static property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Object[])">
            <summary>
            Establece la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales.</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
            <param name="args">Valores de índice opcionales para las propiedades indizadas. Los índices de las propiedades indizadas son de base cero. Este valor debe ser NULL para las propiedades no indizadas. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.SetStaticProperty(System.String,System.Reflection.BindingFlags,System.Object,System.Type[],System.Object[])">
            <summary>
            Establece la propiedad estática
            </summary>
            <param name="name">Nombre de la propiedad</param>
            <param name="bindingFlags">Atributos de invocación adicionales.</param>
            <param name="value">Valor que se va a establecer en el campo o la propiedad</param>
            <param name="parameterTypes">Una matriz de <see cref="T:System.Type"/> objetos que representan el número, orden y tipo de los parámetros para la propiedad indizada.</param>
            <param name="args">Argumentos para pasar al miembro que se va a invocar.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType.InvokeHelperStatic(System.String,System.Reflection.BindingFlags,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Invoca el método estático
            </summary>
            <param name="name">Nombre del miembro</param>
            <param name="bindingFlags">Atributos de invocación adicionales</param>
            <param name="args">Argumentos para la invocación</param>
            <param name="culture">Referencia cultural</param>
            <returns>Resultado de la invocación</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper">
            <summary>
            Proporciona detección de la signatura del método para los métodos genéricos.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.CompareMethodSigAndName(System.Reflection.MethodBase,System.Reflection.MethodBase)">
            <summary>
            Compares the method signatures of these two methods.
            </summary>
            <param name="m1">Method1</param>
            <param name="m2">Method2</param>
            <returns>True if they are similiar.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.GetHierarchyDepth(System.Type)">
            <summary>
            Gets the hierarchy depty from the base type of the provided type.
            </summary>
            <param name="t">The type.</param>
            <returns>The depth.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.FindMostDerivedNewSlotMeth(System.Reflection.MethodBase[],System.Int32)">
            <summary>
            Finds most dervied type with the provided information.
            </summary>
            <param name="match">Candidate matches.</param>
            <param name="cMatches">Number of matches.</param>
            <returns>The most derived method.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
            <summary>
            Dado un conjunto de métodos que coinciden con los criterios base, seleccione un método basado
            en una matriz de tipos. Este método debe devolver NULL si no hay ningún método que coincida
            con los criterios.
            </summary>
            <param name="bindingAttr">Binding specification.</param>
            <param name="match">Candidate matches</param>
            <param name="types">Types</param>
            <param name="modifiers">Parameter modifiers.</param>
            <returns>Matching method. Null if none matches.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.FindMostSpecificMethod(System.Reflection.MethodBase,System.Int32[],System.Type,System.Reflection.MethodBase,System.Int32[],System.Type,System.Type[],System.Object[])">
            <summary>
            Finds the most specific method in the two methods provided.
            </summary>
            <param name="m1">Method 1</param>
            <param name="paramOrder1">Parameter order for Method 1</param>
            <param name="paramArrayType1">Paramter array type.</param>
            <param name="m2">Method 2</param>
            <param name="paramOrder2">Parameter order for Method 2</param>
            <param name="paramArrayType2">&gt;Paramter array type.</param>
            <param name="types">Types to search in.</param>
            <param name="args">Args.</param>
            <returns>An int representing the match.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.FindMostSpecific(System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Type[],System.Object[])">
            <summary>
            Finds the most specific method in the two methods provided.
            </summary>
            <param name="p1">Method 1</param>
            <param name="paramOrder1">Parameter order for Method 1</param>
            <param name="paramArrayType1">Paramter array type.</param>
            <param name="p2">Method 2</param>
            <param name="paramOrder2">Parameter order for Method 2</param>
            <param name="paramArrayType2">&gt;Paramter array type.</param>
            <param name="types">Types to search in.</param>
            <param name="args">Args.</param>
            <returns>An int representing the match.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.RuntimeTypeHelper.FindMostSpecificType(System.Type,System.Type,System.Type)">
            <summary>
            Finds the most specific type in the two provided.
            </summary>
            <param name="c1">Type 1</param>
            <param name="c2">Type 2</param>
            <param name="t">The defining type</param>
            <returns>An int representing the match.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext">
            <summary>
            Se usa para almacenar información proporcionada a las pruebas unitarias.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.Properties">
            <summary>
            Gets per test properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataRow">
            <summary>
            Gets the current data row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DataConnection">
            <summary>
            Gets current data connection row when test is used for data driven testing.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory">
            <summary>
            Gets base directory for the test run, under which deployed files and result files are stored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DeploymentDirectory">
            <summary>
            Gets directory for files deployed for the test run. Typically a subdirectory of <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.ResultsDirectory">
            <summary>
            Gets base directory for results from the test run. Typically a subdirectory of <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunResultsDirectory">
            <summary>
            Gets directory for test run result files. Typically a subdirectory of <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.ResultsDirectory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestResultsDirectory">
            <summary>
            Gets directory for test result files.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDir">
            <summary>
            Gets base directory for the test run, under which deployed files and result files are stored.
            Same as <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"/>. Use esta propiedad en su lugar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestDeploymentDir">
            <summary>
            Gets directory for files deployed for the test run. Typically a subdirectory of <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunDirectory"/>.
            Same as <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.DeploymentDirectory"/>. Use esta propiedad en su lugar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestLogsDir">
            <summary>
            Gets directory for test run result files. Typically a subdirectory of <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.ResultsDirectory"/>.
            Same as <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestRunResultsDirectory"/>. Use esa propiedad para los archivos de resultados de la serie de pruebas o bien
            <see cref="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestResultsDirectory"/> para los archivos de resultados específicos de la prueba en su lugar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.FullyQualifiedTestClassName">
            <summary>
            Gets the Fully-qualified name of the class containing the test method currently being executed
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.TestName">
            <summary>
            Gets the name of the test method currently being executed
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.CurrentTestOutcome">
            <summary>
            Obtiene el resultado de la prueba actual.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.WriteLine(System.String)">
            <summary>
            Se usa para escribir mensajes de seguimiento durante la ejecución de la prueba
            </summary>
            <param name="message">cadena de mensaje con formato</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.WriteLine(System.String,System.Object[])">
            <summary>
            Se usa para escribir mensajes de seguimiento durante la ejecución de la prueba
            </summary>
            <param name="format">cadena de formato</param>
            <param name="args">los argumentos</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.AddResultFile(System.String)">
            <summary>
            Agrega un nombre de archivo a la lista en TestResult.ResultFileNames
            </summary>
            <param name="fileName">
            Nombre del archivo.
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.BeginTimer(System.String)">
            <summary>
            Inicia un temporizador con el nombre especificado
            </summary>
            <param name="timerName"> Name of the timer.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestContext.EndTimer(System.String)">
            <summary>
            Finaliza un temporizador con el nombre especificado
            </summary>
            <param name="timerName"> Name of the timer.</param>
        </member>
    </members>
</doc>
