<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.TestPlatform.TestFramework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod">
            <summary>
            Atributo TestMethod para la ejecución.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.TestMethodName">
            <summary>
            Obtiene el nombre del método de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.TestClassName">
            <summary>
            Obtiene el nombre de la clase de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.ReturnType">
            <summary>
            Obtiene el tipo de valor devuelto del método de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.ParameterTypes">
            <summary>
            Obtiene los parámetros del método de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.MethodInfo">
            <summary>
            Obtiene el objeto methodInfo para el método de prueba. No se debe usar para invocar el método de prueba.
            Se usa solamente para cualquier otra información que pueda necesitar la extensión.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.Invoke(System.Object[])">
            <summary>
            Invoca el método de prueba.
            </summary>
            <param name="arguments">
            Argumentos que se pasan al método de prueba (por ejemplo, controlada por datos)
            </param>
            <returns>
            Resultado de la invocación del método de prueba.
            </returns>
            <remarks>
            Esta llamada también controla los métodos de prueba asincrónicos.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.GetAllAttributes(System.Boolean)">
            <summary>
            Obtiene todos los atributos del método de prueba.
            </summary>
            <param name="inherit">
            Indica si el atributo definido en la clase primaria es válido.
            </param>
            <returns>
            Todos los atributos.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod.GetAttributes``1(System.Boolean)">
            <summary>
            Obtiene un atributo de un tipo específico.
            </summary>
            <typeparam name="AttributeType"> Tipo System.Attribute. </typeparam>
            <param name="inherit">
            Indica si el atributo definido en la clase primaria es válido.
            </param>
            <returns>
            Atributos del tipo especificado.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Helper">
            <summary>
            El elemento auxiliar.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Helper.CheckParameterNotNull(System.Object,System.String,System.String)">
            <summary>
            Parámetro de comprobación no NULL.
            </summary>
            <param name="param">
            El parámetro.
            </param>
            <param name="parameterName">
            El nombre del parámetro.
            </param>
            <param name="message">
            El mensaje.
            </param>
            <exception cref="T:System.ArgumentNullException"> Inicia una excepción de argumento nulo cuando el parámetro es NULL. </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Helper.CheckParameterNotNullOrEmpty(System.String,System.String,System.String)">
            <summary>
            Parámetro de comprobación no NULL o vacío.
            </summary>
            <param name="param">
            El parámetro.
            </param>
            <param name="parameterName">
            El nombre del parámetro.
            </param>
            <param name="message">
            El mensaje.
            </param>
            <exception cref="T:System.ArgumentException"> Inicia una excepción ArgumentException cuando el parámetro es NULL. </exception>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod">
            <summary>
            Enumeración de cómo se accede a las filas de datos en las pruebas controladas por datos.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Sequential">
            <summary>
            Las filas se devuelven en orden secuencial.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random">
            <summary>
            Las filas se devuelven en orden aleatorio.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute">
            <summary>
            Atributo para definir los datos alineados de un método de prueba.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute.#ctor(System.Object)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute"/>.
            </summary>
            <param name="data1"> Objeto de datos. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute.#ctor(System.Object,System.Object[])">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute"/> class which takes in an array of arguments.
            </summary>
            <param name="data1"> Objeto de datos. </param>
            <param name="moreData"> Más datos. </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute.Data">
            <summary>
            Obtiene datos para llamar al método de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute.DisplayName">
            <summary>
            Obtiene o establece el nombre para mostrar en los resultados de las pruebas para personalizarlo.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
            <summary>
            Excepción de aserción no concluyente.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
            <param name="ex"> La excepción. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException">
            <summary>
            Clase InternalTestFailureException. Se usa para indicar un error interno de un caso de prueba
            </summary>
            <remarks>
            This class is only added to preserve source compatibility with the V1 framework.
            For all practical purposes either use AssertFailedException/AssertInconclusiveException.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException"/>.
            </summary>
            <param name="msg"> Mensaje de la excepción. </param>
            <param name="ex"> La excepción. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException"/>.
            </summary>
            <param name="msg"> Mensaje de la excepción. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.InternalTestFailureException"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute">
            <summary>
            Atributo que especifica que se espere una excepción del tipo especificado
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute"/> class with the expected type
            </summary>
            <param name="exceptionType">Tipo de la excepción esperada</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type,System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute"/> class with
            the expected type and the message to include when no exception is thrown by the test.
            </summary>
            <param name="exceptionType">Tipo de la excepción esperada</param>
            <param name="noExceptionMessage">
            Mensaje que se incluye en el resultado de la prueba si esta no se supera debido a que no se inicia una excepción
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.ExceptionType">
            <summary>
            Obtiene un valor que indica el tipo de la excepción esperada
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.AllowDerivedTypes">
            <summary>
            Obtiene o establece un valor que indica si se permite que los tipos derivados del tipo de excepción esperado
            se consideren también como esperados
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.NoExceptionMessage">
            <summary>
            Obtiene el mensaje que se va a incluir en el resultado de la prueba si esta no se realiza porque no se inicia una excepción
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.Verify(System.Exception)">
            <summary>
            Comprueba que el tipo de excepción iniciada por la prueba unitaria es el esperado
            </summary>
            <param name="exception">Excepción que inicia la prueba unitaria</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute">
            <summary>
            Clase base para atributos que especifican que se espere una excepción de una prueba unitaria
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute"/> class with a default no-exception message
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute"/> class with a no-exception message
            </summary>
            <param name="noExceptionMessage">
            Mensaje para incluir en el resultado de la prueba si esta no se supera debido a que no se inicia una
            excepción
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.NoExceptionMessage">
            <summary>
            Obtiene el mensaje que se va a incluir en el resultado de la prueba si esta no se realiza porque no se inicia una excepción
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.SpecifiedNoExceptionMessage">
            <summary>
            Obtiene el mensaje que se va a incluir en el resultado de la prueba si esta no se realiza porque no se inicia una excepción
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.GetDefaultNoExceptionMessage(System.String)">
            <summary>
            Obtiene el mensaje predeterminado de no excepción
            </summary>
            <param name="expectedExceptionAttributeTypeName">Nombre del tipo de atributo ExpectedException</param>
            <returns>Mensaje de ausencia de excepción predeterminado</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.Verify(System.Exception)">
            <summary>
            Determina si se espera la excepción. Si el método devuelve datos, se
            entiende que la excepción se esperaba. Si el método inicia una excepción, se
            entiende que la excepción no se esperaba y el mensaje de excepción iniciada
            se incluye en el resultado de la prueba. La clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.Assert"/> se puede usar por
            comodidad. Si se usa <see cref="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive"/> y se produce un error de aserción,
            el resultado de la prueba se establece como No concluyente.
            </summary>
            <param name="exception">Excepción que inicia la prueba unitaria</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionBaseAttribute.RethrowIfAssertException(System.Exception)">
            <summary>
            Reinicie la excepción si es de tipo AssertFailedException o AssertInconclusiveException
            </summary>
            <param name="exception">La excepción que se va a reiniciar si es una excepción de aserción</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper">
            <summary>
            Esta clase está diseñada para ayudar al usuario a realizar pruebas unitarias para tipos con tipos genéricos.
            GenericParameterHelper satisface algunas de las restricciones de tipo genérico comunes,
            como:
            1. Constructor predeterminado público
            2. Implementa una interfaz común: IComparable, IEnumerable
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper"/> class that
            satisfies the 'newable' constraint in C# generics.
            </summary>
            <remarks>
            This constructor initializes the Data property to a random value.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.#ctor(System.Int32)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper"/> class that
            initializes the Data property to a user-supplied value.
            </summary>
            <param name="data">Cualquier valor entero</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Data">
            <summary>
            Obtiene o establece los datos
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Equals(System.Object)">
            <summary>
            Realice la comparación de valor de dos objetos GenericParameterHelper
            </summary>
            <param name="obj">objeto con el que hacer la comparación</param>
            <returns>Es true si el objeto tiene el mismo valor que el objeto GenericParameterHelper "this".
            De lo contrario, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetHashCode">
            <summary>
            Devuelve un código hash para este objeto.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.CompareTo(System.Object)">
            <summary>
            Compara los datos de ambos objetos <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper"/>.
            </summary>
            <param name="obj">Objeto con el que se va a comparar.</param>
            <returns>
            Número con signo que indica los valores relativos de esta instancia y valor.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Se inicia cuando el objeto que se pasa no es una instancia de <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.GetEnumerator">
            <summary>
            Devuelve un objeto IEnumerator cuya longitud se deriva de
            la propiedad Data.
            </summary>
            <returns>The IEnumerator object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.GenericParameterHelper.Clone">
            <summary>
            Returns a GenericParameterHelper object that is equal to
            'this' one.
            </summary>
            <returns>The cloned object.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Logging.Logger">
            <summary>
            Permite a los usuarios registrar o escribir seguimientos de las pruebas unitarias para diagnóstico.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Logging.Logger.LogMessageHandler">
            <summary>
            Controlador para LogMessage.
            </summary>
            <param name="message">Mensaje para registrar.</param>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UnitTesting.Logging.Logger.OnLogMessage">
            <summary>
            Evento que se va a escuchar. Se genera cuando el autor de las pruebas unitarias escribe algún mensaje.
            Lo consume principalmente el adaptador.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Logging.Logger.LogMessage(System.String,System.Object[])">
            <summary>
            API del escritor de la prueba para llamar a los mensajes de registro.
            </summary>
            <param name="format">Formato de cadena con marcadores de posición.</param>
            <param name="args">Parámetros para los marcadores de posición.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute">
            <summary>
            Atributo TestCategory. Se usa para especificar la categoría de una prueba unitaria.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute"/> class and applies the category to the test.
            </summary>
            <param name="testCategory">
            Categoría de prueba.
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute.TestCategories">
            <summary>
            Gets the test categories that has been applied to the test.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute">
            <summary>
            Clase base del atributo "Category"
            </summary>
            <remarks>
            The reason for this attribute is to let the users create their own implementation of test categories.
            - test framework (discovery, etc) deals with TestCategoryBaseAttribute.
            - The reason that TestCategories property is a collection rather than a string,
              is to give more flexibility to the user. For instance the implementation may be based on enums for which the values can be OR'ed
              in which case it makes sense to have single attribute rather than multiple ones on the same test.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute"/> class.
            Applies the category to the test. The strings returned by TestCategories
            are used with the /category command to filter tests
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryBaseAttribute.TestCategories">
            <summary>
            Gets the test category that has been applied to the test.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            <summary>
            Clase AssertFailedException. Se usa para indicar el error de un caso de prueba
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
            <param name="ex"> La excepción. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException"/>.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.Assert">
            <summary>
            Colección de clases auxiliares para probar varias condiciones en las
            pruebas unitarias. Si la condición que se está probando no se cumple, se inicia
            una excepción.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean)">
            <summary>
            Comprueba si la condición especificada es true e inicia una excepción
            si la condición es false.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea true.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es false.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String)">
            <summary>
            Comprueba si la condición especificada es true e inicia una excepción
            si la condición es false.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea true.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="condition"/>
            es false. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es false.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
            <summary>
            Comprueba si la condición especificada es true e inicia una excepción
            si la condición es false.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea true.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="condition"/>
            es false. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es false.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean)">
            <summary>
            Comprueba si la condición especificada es false e inicia una excepción
            si la condición es true.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea false.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es true.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String)">
            <summary>
            Comprueba si la condición especificada es false e inicia una excepción
            si la condición es true.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea false.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="condition"/>
            es true. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es true.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
            <summary>
            Comprueba si la condición especificada es false e inicia una excepción
            si la condición es true.
            </summary>
            <param name="condition">
            Condición que la prueba espera que sea false.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="condition"/>
            es true. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="condition"/> es true.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object)">
            <summary>
            Comprueba si el objeto especificado es NULL e inicia una excepción
            si no lo es.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea NULL.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String)">
            <summary>
            Comprueba si el objeto especificado es NULL e inicia una excepción
            si no lo es.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no es NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNull(System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si el objeto especificado es NULL e inicia una excepción
            si no lo es.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no es NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object)">
            <summary>
            Comprueba si el objeto especificado no es NULL e inicia una excepción
            si es NULL.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea NULL.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String)">
            <summary>
            Comprueba si el objeto especificado no es NULL e inicia una excepción
            si es NULL.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            es NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotNull(System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si el objeto especificado no es NULL e inicia una excepción
            si es NULL.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            es NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object)">
            <summary>
            Comprueba si ambos objetos especificados hacen referencia al mismo objeto e
            inicia una excepción si ambas entradas no hacen referencia al mismo objeto.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String)">
            <summary>
            Comprueba si ambos objetos especificados hacen referencia al mismo objeto e
            inicia una excepción si ambas entradas no hacen referencia al mismo objeto.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual que <paramref name="expected"/>. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreSame(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si ambos objetos especificados hacen referencia al mismo objeto e
            inicia una excepción si ambas entradas no hacen referencia al mismo objeto.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual que <paramref name="expected"/>. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object)">
            <summary>
            Comprueba si los objetos especificados hacen referencia a distintos objetos e
            inicia una excepción si ambas entradas hacen referencia al mismo objeto.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String)">
            <summary>
            Comprueba si los objetos especificados hacen referencia a distintos objetos e
            inicia una excepción si ambas entradas hacen referencia al mismo objeto.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual que <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotSame(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si los objetos especificados hacen referencia a distintos objetos e
            inicia una excepción si ambas entradas hacen referencia al mismo objeto.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual que <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> hace referencia al mismo objeto
            que <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0)">
            <summary>
            Comprueba si los valores especificados son iguales e inicia una excepción
            si ambos valores son distintos. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="expected">
            Primer valor para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String)">
            <summary>
            Comprueba si los valores especificados son iguales e inicia una excepción
            si ambos valores son distintos. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="expected">
            Primer valor para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Comprueba si los valores especificados son iguales e inicia una excepción
            si ambos valores son distintos. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="expected">
            Primer valor para comparar. Este es el valor que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0)">
            <summary>
            Comprueba si los valores especificados son distintos e inicia una excepción
            si ambos valores son iguales. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="notExpected">
            Primer valor para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String)">
            <summary>
            Comprueba si los valores especificados son distintos e inicia una excepción
            si ambos valores son iguales. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="notExpected">
            Primer valor para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual``1(``0,``0,System.String,System.Object[])">
            <summary>
            Comprueba si los valores especificados son distintos e inicia una excepción
            si ambos valores son iguales. Los tipos numéricos distintos se tratan
            como diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <typeparam name="T">
            Tipo de valores que se van a comparar.
            </typeparam>
            <param name="notExpected">
            Primer valor para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor para comparar. Este es el valor generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object)">
            <summary>
            Comprueba si los objetos especificados son iguales e inicia una excepción
            si ambos objetos son distintos. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el objeto que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String)">
            <summary>
            Comprueba si los objetos especificados son iguales e inicia una excepción
            si ambos objetos son distintos. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el objeto que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si los objetos especificados son iguales e inicia una excepción
            si ambos objetos son distintos. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="expected">
            Primer objeto para comparar. Este es el objeto que la prueba espera.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object)">
            <summary>
            Comprueba si los objetos especificados son distintos e inicia una excepción
            si ambos objetos son iguales. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String)">
            <summary>
            Comprueba si los objetos especificados son distintos e inicia una excepción
            si ambos objetos son iguales. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si los objetos especificados son distintos e inicia una excepción
            si ambos objetos son iguales. Los tipos numéricos distintos se tratan
            como tipos diferentes aunque sus valores lógicos sean iguales. 42L no es igual que 42.
            </summary>
            <param name="notExpected">
            Primer objeto para comparar. Este es el valor que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo objeto para comparar. Este es el objeto generado por el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single)">
            <summary>
            Comprueba si los valores float especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor float para comparar. Este es el valor float que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Comprueba si los valores float especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor float para comparar. Este es el valor float que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            difiere de <paramref name="expected"/> por más de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
            <summary>
            Comprueba si los valores float especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor float para comparar. Este es el valor float que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            difiere de <paramref name="expected"/> por más de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> no es igual a
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single)">
            <summary>
            Comprueba si los valores float especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor float para comparar. Este es el valor float que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String)">
            <summary>
            Comprueba si los valores float especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor float para comparar. Este es el valor float que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/> o difiere por menos de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Single,System.Single,System.Single,System.String,System.Object[])">
            <summary>
            Comprueba si los valores float especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor float para comparar. Este es el valor float que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor float para comparar. Este es el valor float generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/> o difiere por menos de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double)">
            <summary>
            Comprueba si los valores double especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor double para comparar. Este es el valor double que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Comprueba si los valores double especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor double para comparar. Este es el valor double que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            difiere de <paramref name="expected"/> por más de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Comprueba si los valores double especificados son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primer valor double para comparar. Este es el valor double que la prueba espera.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="expected"/>
            por más de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            difiere de <paramref name="expected"/> por más de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double)">
            <summary>
            Comprueba si los valores double especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor double para comparar. Este es el valor double que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Comprueba si los valores double especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor double para comparar. Este es el valor double que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/> o difiere por menos de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.Double,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Comprueba si los valores double especificados son distintos e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primer valor double para comparar. Este es el valor double que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segundo valor double para comparar. Este es el valor double generado por el código sometido a prueba.
            </param>
            <param name="delta">
            Precisión requerida. Se iniciará una excepción solamente si
            <paramref name="actual"/> difiere de <paramref name="notExpected"/>
            por un máximo de <paramref name="delta"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/> o difiere por menos de
            <paramref name="delta"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean)">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son. Se usa la referencia cultural de todos los idiomas para la comparación.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son. Se usa la referencia cultural de todos los idiomas para la comparación.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son. Se usa la referencia cultural de todos los idiomas para la comparación.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Comprueba si las cadenas especificadas son iguales e inicia una excepción
            si no lo son.
            </summary>
            <param name="expected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean)">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales. Para comparar, se usa la referencia cultural de todos los idiomas.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales. Para comparar, se usa la referencia cultural de todos los idiomas.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.String,System.Object[])">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales. Para comparar, se usa la referencia cultural de todos los idiomas.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String)">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.AreNotEqual(System.String,System.String,System.Boolean,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Comprueba si las cadenas especificadas son distintas e inicia una excepción
            si son iguales.
            </summary>
            <param name="notExpected">
            Primera cadena para comparar. Esta es la cadena que la prueba espera que no
            coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda cadena para comparar. Esta es la cadena generada por el código sometido a prueba.
            </param>
            <param name="ignoreCase">
            Valor booleano que indica una comparación donde se distingue o no mayúsculas de minúsculas. (true
            indica una comparación que no distingue mayúsculas de minúsculas).
            </param>
            <param name="culture">
            Objeto CultureInfo que proporciona información de comparación específica de la referencia cultural.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type)">
            <summary>
            Comprueba si el objeto especificado es una instancia del tipo
            esperado e inicia una excepción si el tipo esperado no se encuentra en
            la jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea del tipo especificado.
            </param>
            <param name="expectedType">
            Tipo esperado de <paramref name="value"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String)">
            <summary>
            Comprueba si el objeto especificado es una instancia del tipo
            esperado e inicia una excepción si el tipo esperado no se encuentra en
            la jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea del tipo especificado.
            </param>
            <param name="expectedType">
            Tipo esperado de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no es una instancia de <paramref name="expectedType"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
            <summary>
            Comprueba si el objeto especificado es una instancia del tipo
            esperado e inicia una excepción si el tipo esperado no se encuentra en
            la jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que sea del tipo especificado.
            </param>
            <param name="expectedType">
            Tipo esperado de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no es una instancia de <paramref name="expectedType"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type)">
            <summary>
            Comprueba si el objeto especificado no es una instancia del tipo
            incorrecto e inicia una excepción si el tipo especificado se encuentra en la
            jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea del tipo especificado.
            </param>
            <param name="wrongType">
            El tipo que <paramref name="value"/> no debe tener.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL y
            <paramref name="wrongType"/> se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String)">
            <summary>
            Comprueba si el objeto especificado no es una instancia del tipo
            incorrecto e inicia una excepción si el tipo especificado se encuentra en la
            jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea del tipo especificado.
            </param>
            <param name="wrongType">
            El tipo que <paramref name="value"/> no debe tener.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            es una instancia de <paramref name="wrongType"/>. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL y
            <paramref name="wrongType"/> se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.IsNotInstanceOfType(System.Object,System.Type,System.String,System.Object[])">
            <summary>
            Comprueba si el objeto especificado no es una instancia del tipo
            incorrecto e inicia una excepción si el tipo especificado se encuentra en la
            jerarquía de herencia del objeto.
            </summary>
            <param name="value">
            El objeto que la prueba espera que no sea del tipo especificado.
            </param>
            <param name="wrongType">
            El tipo que <paramref name="value"/> no debe tener.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            es una instancia de <paramref name="wrongType"/>. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no es NULL y
            <paramref name="wrongType"/> se encuentra en la jerarquía de herencia
            de <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail">
            <summary>
            Inicia una excepción AssertFailedException.
            </summary>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String)">
            <summary>
            Inicia una excepción AssertFailedException.
            </summary>
            <param name="message">
            Mensaje que se va a incluir en la excepción. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Fail(System.String,System.Object[])">
            <summary>
            Inicia una excepción AssertFailedException.
            </summary>
            <param name="message">
            Mensaje que se va a incluir en la excepción. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive">
            <summary>
            Inicia una excepción AssertInconclusiveException.
            </summary>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String)">
            <summary>
            Inicia una excepción AssertInconclusiveException.
            </summary>
            <param name="message">
            Mensaje que se va a incluir en la excepción. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Inconclusive(System.String,System.Object[])">
            <summary>
            Inicia una excepción AssertInconclusiveException.
            </summary>
            <param name="message">
            Mensaje que se va a incluir en la excepción. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertInconclusiveException">
            Se inicia siempre.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.Equals(System.Object,System.Object)">
            <summary>
            Las sobrecargas de métodos equals estáticos se usan para comparar la igualdad de referencias en instancias de dos
            tipos. Este método <b>no</b> se debe usar para comparar la igualdad en dos
            instancias. Este objeto <b>siempre</b> se iniciará con Assert.Fail. Use
            Assert.AreEqual y las sobrecargas asociadas en las pruebas unitarias.
            </summary>
            <param name="objA"> Objeto A </param>
            <param name="objB"> Objeto B </param>
            <returns> False, siempre. </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Action)">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado para el código que se va a probar y que se espera que inicie una excepción.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Action,System.String)">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado a código que se va a probar y que se espera que inicie una excepción.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Func{System.Object})">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado a código que se va a probar y que se espera que inicie una excepción.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Func{System.Object},System.String)">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado a código que se va a probar y que se espera que inicie una excepción.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Func{System.Object},System.String,System.Object[])">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado a código que se va a probar y que se espera que inicie una excepción.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsException``1(System.Action,System.String,System.Object[])">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado a código que se va a probar y que se espera que inicie una excepción.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
            El tipo de excepción que se espera que se inicie.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsExceptionAsync``1(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (and not of derived type)
            and throws
            <code>
            AssertFailedException
            </code>
            si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">
            Delegado para el código que se va a probar y que se espera que inicie una excepción.
            </param>
            <typeparam name="T">
            Tipo de excepción que se espera que se inicie.
            </typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
 <see cref="T:System.Threading.Tasks.Task"/> ejecuta el delegado.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsExceptionAsync``1(System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (y no de tipo derivado)
            e inicia <code>AssertFailedException</code> si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">Delegado para el código que se va a probar y que se espera que inicie una excepción.</param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <typeparam name="T">Tipo de excepción que se espera que se inicie.</typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
 <see cref="T:System.Threading.Tasks.Task"/> ejecuta el delegado.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ThrowsExceptionAsync``1(System.Func{System.Threading.Tasks.Task},System.String,System.Object[])">
            <summary>
            Comprueba si el código especificado por el delegado <paramref name="action"/> inicia la excepción exacta dada de tipo <typeparamref name="T"/> (y no de tipo derivado)
            e inicia <code>AssertFailedException</code> si el código no inicia la excepción o inicia una excepción de tipo distinto a <typeparamref name="T"/>.
            </summary>
            <param name="action">Delegado para el código que se va a probar y que se espera que inicie una excepción.</param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="action"/>
            no inicia una excepción de tipo <typeparamref name="T"/>.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <typeparam name="T">Tipo de excepción que se espera que se inicie.</typeparam>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="action"/> no inicia una excepción de tipo <typeparamref name="T"/>.
            </exception>
            <returns>
 <see cref="T:System.Threading.Tasks.Task"/> ejecuta el delegado.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ReplaceNullChars(System.String)">
            <summary>
            Reemplaza los caracteres NULL ('\0') por "\\0".
            </summary>
            <param name="input">
            Cadena para buscar.
            </param>
            <returns>
            La cadena convertida con los caracteres NULL reemplazados por "\\0".
            </returns>
            <remarks>
            Solo es de tipo público y se conserva para mantener la compatibilidad con el marco de V1.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.HandleFail(System.String,System.String,System.Object[])">
            <summary>
            Función auxiliar que crea e inicia una excepción AssertionFailedException
            </summary>
            <param name="assertionName">
            nombre de la aserción que inicia una excepción
            </param>
            <param name="message">
            mensaje que describe las condiciones del error de aserción
            </param>
            <param name="parameters">
            Los parámetros.
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.CheckParameterNotNull(System.Object,System.String,System.String,System.String,System.Object[])">
            <summary>
            Comprueba el parámetro para las condiciones válidas
            </summary>
            <param name="param">
            El parámetro.
            </param>
            <param name="assertionName">
            Nombre de la aserción.
            </param>
            <param name="parameterName">
            nombre de parámetro
            </param>
            <param name="message">
            mensaje de la excepción de parámetro no válido
            </param>
            <param name="parameters">
            Los parámetros.
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.Assert.ReplaceNulls(System.Object)">
            <summary>
            Convierte un objeto en cadena de forma segura, con control de los valores NULL y los caracteres NULL.
            Los valores NULL se convierten en "(null)". Los caracteres NULL se convierten en "\\0".
            </summary>
            <param name="input">
            Objeto que se va a convertir en cadena.
            </param>
            <returns>
            La cadena convertida.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert">
            <summary>
            Aserción de cadena.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada contiene la subcadena indicada
            e inicia una excepción si la subcadena no aparece en la
            cadena de prueba.
            </summary>
            <param name="value">
            La cadena que se espera que contenga <paramref name="substring"/>.
            </param>
            <param name="substring">
            La cadena que se espera que aparezca en <paramref name="value"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="substring"/> no se encuentra en
            <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada contiene la subcadena indicada
            e inicia una excepción si la subcadena no aparece en la
            cadena de prueba.
            </summary>
            <param name="value">
            La cadena que se espera que contenga <paramref name="substring"/>.
            </param>
            <param name="substring">
            La cadena que se espera que aparezca en <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="substring"/>
            no se encuentra en <paramref name="value"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="substring"/> no se encuentra en
            <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Contains(System.String,System.String,System.String,System.Object[])">
            <summary>
            Comprueba si la cadena especificada contiene la subcadena indicada
            e inicia una excepción si la subcadena no aparece en la
            cadena de prueba.
            </summary>
            <param name="value">
            La cadena que se espera que contenga <paramref name="substring"/>.
            </param>
            <param name="substring">
            La cadena que se espera que aparezca en <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="substring"/>
            no se encuentra en <paramref name="value"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="substring"/> no se encuentra en
            <paramref name="value"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada empieza por la subcadena indicada
            e inicia una excepción si la cadena de prueba no empieza por la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que empiece por <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un prefijo de <paramref name="value"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no empieza por
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada empieza por la subcadena indicada
            e inicia una excepción si la cadena de prueba no empieza por la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que empiece por <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un prefijo de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no empieza por <paramref name="substring"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no empieza por
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.StartsWith(System.String,System.String,System.String,System.Object[])">
            <summary>
            Comprueba si la cadena especificada empieza por la subcadena indicada
            e inicia una excepción si la cadena de prueba no empieza por la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que empiece por <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un prefijo de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no empieza por <paramref name="substring"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no empieza por
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada termina con la subcadena indicada
            e inicia una excepción si la cadena de prueba no finaliza con la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que termine con <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un sufijo de <paramref name="value"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no termina con
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String)">
            <summary>
            Comprueba si la cadena especificada termina con la subcadena indicada
            e inicia una excepción si la cadena de prueba no finaliza con la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que termine con <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un sufijo de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no termina con <paramref name="substring"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no termina con
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.EndsWith(System.String,System.String,System.String,System.Object[])">
            <summary>
            Comprueba si la cadena especificada termina con la subcadena indicada
            e inicia una excepción si la cadena de prueba no finaliza con la
            subcadena.
            </summary>
            <param name="value">
            Cadena que se espera que termine con <paramref name="substring"/>.
            </param>
            <param name="substring">
            Cadena que se espera que sea un sufijo de <paramref name="value"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no termina con <paramref name="substring"/>. El mensaje se
            muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no termina con
            <paramref name="substring"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Comprueba si la cadena especificada coincide con una expresión regular e
            inicia una excepción si la cadena no coincide con la expresión.
            </summary>
            <param name="value">
            La cadena que se espera que coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/>
            coincida.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no coincide con
            <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Comprueba si la cadena especificada coincide con una expresión regular e
            inicia una excepción si la cadena no coincide con la expresión.
            </summary>
            <param name="value">
            La cadena que se espera que coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/>
            coincida.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no coincide con <paramref name="pattern"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no coincide con
            <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.Matches(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
            <summary>
            Comprueba si la cadena especificada coincide con una expresión regular e
            inicia una excepción si la cadena no coincide con la expresión.
            </summary>
            <param name="value">
            La cadena que se espera que coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/>
            coincida.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            no coincide con <paramref name="pattern"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> no coincide con
            <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Comprueba si la cadena especificada no coincide con una expresión regular
            e inicia una excepción si la cadena coincide con la expresión.
            </summary>
            <param name="value">
            Cadena que se espera que no coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/> no
            coincida.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> coincide con <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Comprueba si la cadena especificada no coincide con una expresión regular
            e inicia una excepción si la cadena coincide con la expresión.
            </summary>
            <param name="value">
            Cadena que se espera que no coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/> no
            coincida.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            coincide con <paramref name="pattern"/>. El mensaje se muestra en los resultados de las
            pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> coincide con <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.StringAssert.DoesNotMatch(System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
            <summary>
            Comprueba si la cadena especificada no coincide con una expresión regular
            e inicia una excepción si la cadena coincide con la expresión.
            </summary>
            <param name="value">
            Cadena que se espera que no coincida con <paramref name="pattern"/>.
            </param>
            <param name="pattern">
            Expresión regular con la que se espera que <paramref name="value"/> no
            coincida.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="value"/>
            coincide con <paramref name="pattern"/>. El mensaje se muestra en los resultados de las
            pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="value"/> coincide con <paramref name="pattern"/>.
            </exception>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert">
            <summary>
            Colección de clases auxiliares para probar varias condiciones asociadas
            a las colecciones en las pruebas unitarias. Si la condición que se está probando no se
            cumple, se inicia una excepción.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object)">
            <summary>
            Comprueba si la colección especificada contiene el elemento indicado
            e inicia una excepción si el elemento no está en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que esté en la colección.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> no se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String)">
            <summary>
            Comprueba si la colección especificada contiene el elemento indicado
            e inicia una excepción si el elemento no está en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que esté en la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="element"/>
            no se encuentra en <paramref name="collection"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> no se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.Contains(System.Collections.ICollection,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si la colección especificada contiene el elemento indicado
            e inicia una excepción si el elemento no está en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que esté en la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="element"/>
            no se encuentra en <paramref name="collection"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> no se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object)">
            <summary>
            Comprueba si la colección especificada no contiene el elemento
            indicado e inicia una excepción si el elemento se encuentra en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que no esté en la colección.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String)">
            <summary>
            Comprueba si la colección especificada no contiene el elemento
            indicado e inicia una excepción si el elemento se encuentra en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que no esté en la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="element"/>
            se encuentra en <paramref name="collection"/>. El mensaje se muestra en los resultados de las
            pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.DoesNotContain(System.Collections.ICollection,System.Object,System.String,System.Object[])">
            <summary>
            Comprueba si la colección especificada no contiene el elemento
            indicado e inicia una excepción si el elemento se encuentra en la colección.
            </summary>
            <param name="collection">
            Colección donde buscar el elemento.
            </param>
            <param name="element">
            El elemento que se espera que no esté en la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="element"/>
            se encuentra en <paramref name="collection"/>. El mensaje se muestra en los resultados de las
            pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="element"/> se encuentra en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son no NULL e inicia
            una excepción si alguno de los elementos es NULL.
            </summary>
            <param name="collection">
            Colección donde buscar elementos NULL.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentra un elemento NULL en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son no NULL e inicia
            una excepción si alguno de los elementos es NULL.
            </summary>
            <param name="collection">
            Colección donde buscar elementos NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="collection"/>
            contiene un elemento NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentra un elemento NULL en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreNotNull(System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si todos los elementos de la colección especificada son no NULL e inicia
            una excepción si alguno de los elementos es NULL.
            </summary>
            <param name="collection">
            Colección donde buscar elementos NULL.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="collection"/>
            contiene un elemento NULL. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentra un elemento NULL en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son únicos o no e
            inicia una excepción si dos elementos de la colección son iguales.
            </summary>
            <param name="collection">
            Colección donde buscar elementos duplicados.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentran dos o más elementos iguales en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son únicos o no e
            inicia una excepción si dos elementos de la colección son iguales.
            </summary>
            <param name="collection">
            Colección donde buscar elementos duplicados.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="collection"/>
            contiene al menos un elemento duplicado. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentran dos o más elementos iguales en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreUnique(System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si todos los elementos de la colección especificada son únicos o no e
            inicia una excepción si dos elementos de la colección son iguales.
            </summary>
            <param name="collection">
            Colección donde buscar elementos duplicados.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="collection"/>
            contiene al menos un elemento duplicado. El mensaje se muestra en los
            resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si se encuentran dos o más elementos iguales en
            <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si una colección es un subconjunto de otra e
            inicia una excepción si algún elemento del subconjunto no se encuentra también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección fuera un superconjunto de <paramref name="subset"/>
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="subset"/> no se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si una colección es un subconjunto de otra e
            inicia una excepción si algún elemento del subconjunto no se encuentra también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección fuera un superconjunto de <paramref name="subset"/>
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento de
            <paramref name="subset"/> no se encuentra en <paramref name="superset"/>.
            El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="subset"/> no se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si una colección es un subconjunto de otra e
            inicia una excepción si algún elemento del subconjunto no se encuentra también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección fuera un superconjunto de <paramref name="subset"/>
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento de
            <paramref name="subset"/> no se encuentra en <paramref name="superset"/>.
            El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="subset"/> no se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si una colección no es un subconjunto de otra e
            inicia una excepción si todos los elementos del subconjunto se encuentran también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección no fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección no fuera un superconjunto de <paramref name="subset"/>
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si cada elemento de <paramref name="subset"/> también se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si una colección no es un subconjunto de otra e
            inicia una excepción si todos los elementos del subconjunto se encuentran también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección no fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección no fuera un superconjunto de <paramref name="subset"/>
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando cada elemento de
            <paramref name="subset"/> también se encuentra en <paramref name="superset"/>.
            El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si cada elemento de <paramref name="subset"/> también se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsNotSubsetOf(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si una colección no es un subconjunto de otra e
            inicia una excepción si todos los elementos del subconjunto se encuentran también en el
            superconjunto.
            </summary>
            <param name="subset">
            Se esperaba que la colección no fuera un subconjunto de <paramref name="superset"/>.
            </param>
            <param name="superset">
            Se esperaba que la colección no fuera un superconjunto de <paramref name="subset"/>
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando cada elemento de
            <paramref name="subset"/> también se encuentra en <paramref name="superset"/>.
            El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si cada elemento de <paramref name="subset"/> también se encuentra en
            <paramref name="superset"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si dos colecciones contienen los mismos elementos e inicia una
            excepción si alguna de ellas contiene un elemento que no esté en la
            otra.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento se encontró en una de las colecciones pero no
            en la otra.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si dos colecciones contienen los mismos elementos e inicia una
            excepción si alguna de ellas contiene un elemento que no esté en la
            otra.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento se encontró
            en una de las colecciones pero no en la otra. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento se encontró en una de las colecciones pero no
            en la otra.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si dos colecciones contienen los mismos elementos e inicia una
            excepción si alguna de ellas contiene un elemento que no esté en la
            otra.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento se encontró
            en una de las colecciones pero no en la otra. El mensaje se muestra
            en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento se encontró en una de las colecciones pero no
            en la otra.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si dos colecciones contienen elementos distintos e inicia una
            excepción si ambas coleciones contienen elementos idénticos, independientemente
            del orden.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera que sean distintos a los de la colección real.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si ambas colecciones contienen los mismos elementos, incluso
            el mismo número de apariciones duplicadas de cada elemento.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si dos colecciones contienen elementos distintos e inicia una
            excepción si ambas coleciones contienen elementos idénticos, independientemente
            del orden.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera que sean distintos a los de la colección real.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            contiene los mismos elementos que <paramref name="expected"/>. El mensaje
            se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si ambas colecciones contienen los mismos elementos, incluso
            el mismo número de apariciones duplicadas de cada elemento.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEquivalent(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si dos colecciones contienen elementos distintos e inicia una
            excepción si ambas coleciones contienen elementos idénticos, independientemente
            del orden.
            </summary>
            <param name="expected">
            Primera colección para comparar. Contiene los elementos que la prueba
            espera que sean distintos a los de la colección real.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por
            el código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            contiene los mismos elementos que <paramref name="expected"/>. El mensaje
            se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si ambas colecciones contienen los mismos elementos, incluso
            el mismo número de apariciones duplicadas de cada elemento.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son instancias
            del tipo esperado e inicia una excepción si el tipo esperado no
            se encuentra en la jerarquía de herencia de uno o más de los elementos.
            </summary>
            <param name="collection">
            Colección que contiene los elementos que la prueba espera que sean del
            tipo especificado.
            </param>
            <param name="expectedType">
            El tipo esperado de cada elemento de <paramref name="collection"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="collection"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de un elemento en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String)">
            <summary>
            Comprueba si todos los elementos de la colección especificada son instancias
            del tipo esperado e inicia una excepción si el tipo esperado no
            se encuentra en la jerarquía de herencia de uno o más de los elementos.
            </summary>
            <param name="collection">
            Colección que contiene los elementos que la prueba espera que sean del
            tipo especificado.
            </param>
            <param name="expectedType">
            El tipo esperado de cada elemento de <paramref name="collection"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento de
            <paramref name="collection"/> no es una instancia de
            <paramref name="expectedType"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="collection"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de un elemento en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AllItemsAreInstancesOfType(System.Collections.ICollection,System.Type,System.String,System.Object[])">
            <summary>
            Comprueba si todos los elementos de la colección especificada son instancias
            del tipo esperado e inicia una excepción si el tipo esperado no
            se encuentra en la jerarquía de herencia de uno o más de los elementos.
            </summary>
            <param name="collection">
            Colección que contiene los elementos que la prueba espera que sean del
            tipo especificado.
            </param>
            <param name="expectedType">
            El tipo esperado de cada elemento de <paramref name="collection"/>.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando un elemento de
            <paramref name="collection"/> no es una instancia de
            <paramref name="expectedType"/>. El mensaje se muestra en los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si un elemento de <paramref name="collection"/> es NULL o
            <paramref name="expectedType"/> no se encuentra en la jerarquía de herencia
            de un elemento en <paramref name="collection"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String)">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.String,System.Object[])">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
            <summary>
            Comprueba si las colecciones especificadas son iguales e inicia una excepción
            si ambas colecciones no son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="expected">
            Primera colección para comparar. Esta es la colección que la prueba espera.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            no es igual a <paramref name="expected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="expected"/> is not equal to
            <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer)">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String)">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.AreNotEqual(System.Collections.ICollection,System.Collections.ICollection,System.Collections.IComparer,System.String,System.Object[])">
            <summary>
            Comprueba si las colecciones especificadas son distintas e inicia una excepción
            si ambas colecciones son iguales. La igualdad equivale a tener los mismos
            elementos en el mismo orden y la misma cantidad. Las distintas referencias al mismo
            valor se consideran iguales.
            </summary>
            <param name="notExpected">
            Primera colección para comparar. Esta es la colección que la prueba espera que
            no coincida con <paramref name="actual"/>.
            </param>
            <param name="actual">
            Segunda colección para comparar. Esta es la colección generada por el
            código sometido a prueba.
            </param>
            <param name="comparer">
            Implementación de comparación que se va a usar al comparar elementos de la colección.
            </param>
            <param name="message">
            Mensaje que se va a incluir en la excepción cuando <paramref name="actual"/>
            es igual a <paramref name="notExpected"/>. El mensaje se muestra en
            los resultados de las pruebas.
            </param>
            <param name="parameters">
            Matriz de parámetros que se usa al formatear <paramref name="message"/>.
            </param>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssertFailedException">
            Se inicia si <paramref name="notExpected"/> es igual a <paramref name="actual"/>.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.IsSubsetOfHelper(System.Collections.ICollection,System.Collections.ICollection)">
            <summary>
            Determina si la primera colección es un subconjunto de la
            segunda. Si cualquiera de los conjuntos contiene elementos duplicados, el número
            de repeticiones del elemento en el subconjunto debe ser inferior o
            igual al número de repeticiones en el superconjunto.
            </summary>
            <param name="subset">
            Colección que la prueba espera que esté incluida en <paramref name="superset"/>.
            </param>
            <param name="superset">
            Colección que la prueba espera que contenga <paramref name="subset"/>.
            </param>
            <returns>
            True si <paramref name="subset"/> es un subconjunto de
            <paramref name="superset"/>, de lo contrario false.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.GetElementCounts(System.Collections.ICollection,System.Int32@)">
            <summary>
            Construye un diccionario que contiene el número de repeticiones de cada
            elemento en la colección especificada.
            </summary>
            <param name="collection">
            Colección que se va a procesar.
            </param>
            <param name="nullCount">
            Número de elementos NULL de la colección.
            </param>
            <returns>
            Diccionario que contiene el número de repeticiones de cada elemento
            en la colección especificada.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.FindMismatchedElement(System.Collections.ICollection,System.Collections.ICollection,System.Int32@,System.Int32@,System.Object@)">
            <summary>
            Encuentra un elemento no coincidente entre ambas colecciones. Un elemento
            no coincidente es aquel que aparece un número distinto de veces en la
            colección esperada de lo que aparece en la colección real. Se
            asume que las colecciones son referencias diferentes, distintas de NULL, con el
            mismo número de elementos. El llamador es el responsable de este nivel de
            comprobación. Si no hay ningún elemento no coincidente, la función devuelve
            false y los parámetros out no se deben usar.
            </summary>
            <param name="expected">
            La primera colección para comparar.
            </param>
            <param name="actual">
            La segunda colección para comparar.
            </param>
            <param name="expectedCount">
            Número esperado de repeticiones de
            <paramref name="mismatchedElement"/> o 0 si no hay ningún elemento no
            coincidente.
            </param>
            <param name="actualCount">
            El número real de repeticiones de
            <paramref name="mismatchedElement"/> o 0 si no hay ningún elemento no
            coincidente.
            </param>
            <param name="mismatchedElement">
            El elemento no coincidente (puede ser nulo) o NULL si no hay ningún
            elemento no coincidente.
            </param>
            <returns>
            Es true si se encontró un elemento no coincidente. De lo contrario, false.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CollectionAssert.ObjectComparer">
            <summary>
            compara los objetos con object.Equals
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException">
            <summary>
            Clase base para las excepciones de marco.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException"/>.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
            <param name="ex"> La excepción. </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestAssertException"/>.
            </summary>
            <param name="msg"> El mensaje. </param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages">
            <summary>
              Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ResourceManager">
            <summary>
              Devuelve la instancia de ResourceManager almacenada en caché que usa esta clase.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.Culture">
            <summary>
              Invalida la propiedad CurrentUICulture del subproceso actual para todas
              las búsquedas de recursos que usan esta clase de recursos fuertemente tipados.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AccessStringInvalidSyntax">
            <summary>
              Busca una cadena traducida similar a La cadena de acceso tiene una sintaxis no válida.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ActualHasMismatchedElements">
            <summary>
              Busca una cadena traducida similar a Apariciones que contiene la colección esperada: {1} de &lt;{2}&gt;. Apariciones que contiene la colección real: {3}. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AllItemsAreUniqueFailMsg">
            <summary>
              Busca una cadena traducida similar a Se encontró un elemento duplicado:&lt;{1}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreEqualCaseFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba:&lt;{1}&gt;. El caso es distinto para el valor real:&lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreEqualDeltaFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba una diferencia no superior a &lt;{3}&gt; entre el valor esperado &lt;{1}&gt; y el valor actual &lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreEqualDifferentTypesFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba:&lt;{1} ({2})&gt;, pero es:&lt;{3} ({4})&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreEqualFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba:&lt;{1}&gt;, pero es:&lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreNotEqualDeltaFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba una diferencia mayor que &lt;{3}&gt; entre el valor esperado &lt;{1}&gt; y el valor actual &lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreNotEqualFailMsg">
            <summary>
              Busca una cadena traducida similar a Se esperaba cualquier valor excepto:&lt;{1}&gt;, pero es:&lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AreSameGivenValues">
            <summary>
              Busca una cadena traducida similar a No pase tipos de valor a AreSame(). Los valores convertidos a Object no serán nunca iguales. Considere el uso de AreEqual(). {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AssertionFailed">
            <summary>
              Busca una cadena traducida similar a Error de {0}. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.AsyncUITestMethodNotSupported">
            <summary>
              Las búsquedas de una cadena localizada similar a async TestMethod con UITestMethodAttribute no es compatible. Quite async o use TestMethodAttribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.BothCollectionsEmpty">
            <summary>
              Busca una cadena traducida similar a Ambas colecciones están vacías. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.BothCollectionsSameElements">
            <summary>
              Busca una cadena traducida similar a Ambas colecciones tienen los mismos elementos.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.BothCollectionsSameReference">
            <summary>
              Busca una cadena traducida similar a Las referencias de ambas colecciones apuntan al mismo objeto de colección. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.BothSameElements">
            <summary>
              Busca una cadena traducida similar a Ambas colecciones tienen los mismos elementos. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.CollectionEqualReason">
            <summary>
              Busca una cadena traducida similar a {0}({1}).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.Common_NullInMessages">
            <summary>
              Busca una cadena traducida similar a (null).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.Common_ObjectString">
            <summary>
              Busca una cadena traducida similar a (objeto).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ContainsFail">
            <summary>
              Busca una cadena traducida similar a La cadena '{0}' no contiene la cadena '{1}'. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.DataDrivenResultDisplayName">
            <summary>
              Busca una cadena traducida similar a {0} ({1}).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.DoNotUseAssertEquals">
            <summary>
              Busca una cadena traducida similar a No se debe usar Assert.Equals para aserciones. Use Assert.AreEqual y Overloads en su lugar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ElementNumbersDontMatch">
            <summary>
              Busca una cadena traducida similar a El número de elementos de las colecciones no coincide. Se esperaba:&lt;{1}&gt;, pero es:&lt;{2}&gt;.{0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ElementsAtIndexDontMatch">
            <summary>
              Busca una cadena traducida similar a El elemento del índice {0} no coincide.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ElementTypesAtIndexDontMatch">
            <summary>
              Busca una cadena traducida similar a El elemento del índice {1} no es del tipo esperado. Tipo esperado:&lt;{2}&gt;, pero es el tipo:&lt;{3}&gt;.{0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ElementTypesAtIndexDontMatch2">
            <summary>
              Busca una cadena traducida similar a El elemento del índice {1} es (null). Se esperaba el tipo:&lt;{2}&gt;.{0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.EndsWithFail">
            <summary>
              Busca una cadena traducida similar a La cadena '{0}' no termina con la cadena '{1}'. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.EqualsTesterInvalidArgs">
            <summary>
              Busca una cadena traducida similar a Argumento no válido: EqualsTester no puede utilizar valores null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.ErrorInvalidCast">
            <summary>
              Busca una cadena traducida similar a No se puede convertir el objeto de tipo {0} en {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.InternalObjectNotValid">
            <summary>
              Busca una cadena traducida similar a El objeto interno al que se hace referencia ya no es válido.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.InvalidParameterToAssert">
            <summary>
              Busca una cadena traducida similar a El parámetro '{0}' no es válido. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.InvalidPropertyType">
            <summary>
              Busca una cadena traducida similar a La propiedad {0} tiene el tipo {1}; se esperaba el tipo {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.IsInstanceOfFailMsg">
            <summary>
              Busca una cadena traducida similar a {0} Tipo esperado:&lt;{1}&gt;. Tipo real:&lt;{2}&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.IsMatchFail">
            <summary>
              Busca una cadena traducida similar a La cadena '{0}' no coincide con el patrón '{1}'. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.IsNotInstanceOfFailMsg">
            <summary>
              Busca una cadena traducida similar a Tipo incorrecto:&lt;{1}&gt;. Tipo real:&lt;{2}&gt;. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.IsNotMatchFail">
            <summary>
              Busca una cadena traducida similar a La cadena '{0}' coincide con el patrón '{1}'. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.NoDataRow">
            <summary>
              Busca una cadena traducida similar a No se especificó ningún atributo DataRowAttribute. Se requiere al menos un elemento DataRowAttribute con DataTestMethodAttribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.NoExceptionThrown">
            <summary>
              Busca una cadena traducida similar a No se produjo ninguna excepción. Se esperaba la excepción {1}. {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.NullParameterToAssert">
            <summary>
              Busca una cadena traducida similar a El parámetro '{0}' no es válido. El valor no puede ser null. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.NumberOfElementsDiff">
            <summary>
              Busca una cadena traducida similar a Número diferente de elementos.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.PrivateAccessorConstructorNotFound">
            <summary>
              Busca una cadena traducida similar a 
                 No se encontró el constructor con la signatura especificada. Es posible que tenga que volver a generar el descriptor de acceso privado,
                 o que el miembro sea privado y esté definido en una clase base. Si esto último es cierto, debe pasar el tipo
                 que define el miembro al constructor de PrivateObject
               .
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.PrivateAccessorMemberNotFound">
            <summary>
              Busca una cadena traducida similar a 
                 No se encontró el miembro especificado ({0}). Es posible que tenga que volver a generar el descriptor de acceso privado,
                 o que el miembro sea privado y esté definido en una clase base. Si esto último es cierto, debe pasar el tipo
                 que define el miembro al constructor de PrivateObject
               .
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.StartsWithFail">
            <summary>
              Busca una cadena traducida similar a La cadena '{0}' no empieza con la cadena '{1}'. {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_ExpectedExceptionTypeMustDeriveFromException">
            <summary>
              Busca una cadena traducida similar a El tipo de excepción esperado debe ser System.Exception o un tipo derivado de System.Exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_FailedToGetExceptionMessage">
            <summary>
              Busca una cadena traducida similar a (No se pudo obtener el mensaje para una excepción del tipo {0} debido a una excepción.).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_TestMethodNoException">
            <summary>
              Busca una cadena traducida similar a El método de prueba no inició la excepción esperada {0}. {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_TestMethodNoExceptionDefault">
            <summary>
              Busca una cadena traducida similar a El método de prueba no inició una excepción. El atributo {0} definido en el método de prueba esperaba una excepción.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_TestMethodWrongException">
            <summary>
              Busca una cadena traducida similar a El método de prueba inició la excepción {0}, pero se esperaba la excepción {1}. Mensaje de la excepción: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.UTF_TestMethodWrongExceptionDerivedAllowed">
            <summary>
              Busca una cadena traducida similar a El método de prueba inició la excepción {0}, pero se esperaba la excepción {1} o un tipo derivado de ella. Mensaje de la excepción: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.FrameworkMessages.WrongExceptionThrown">
             <summary>
               Busca una cadena traducida similar a Se produjo la excepción {2}, pero se esperaba la excepción {1}. {0}
            Mensaje de excepción: {3}
            Seguimiento de la pila: {4}.
             </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome">
            <summary>
            resultados de la prueba unitaria
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Failed">
            <summary>
            La prueba se ejecutó, pero hubo problemas.
            Entre estos, puede haber excepciones o aserciones con errores.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Inconclusive">
            <summary>
            Test has completed, but we can't say if it passed or failed.
            May be used for aborted tests.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Passed">
            <summary>
            Test was executed without any issues.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.InProgress">
            <summary>
            La prueba se está ejecutando.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Error">
            <summary>
            Error del sistema al intentar ejecutar una prueba.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Timeout">
            <summary>
            Se agotó el tiempo de espera de la prueba.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Aborted">
            <summary>
            Test was aborted by the user.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.UnitTestOutcome.Unknown">
            <summary>
            La prueba tiene un estado desconocido
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.UtfHelper">
            <summary>
            Proporciona funcionalidad auxiliar para el marco de pruebas unitarias
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.UtfHelper.GetExceptionMsg(System.Exception)">
            <summary>
            Obtiene los mensajes de excepción, incluidos los mensajes de todas las excepciones internas,
            de forma recursiva
            </summary>
            <param name="ex">Excepción para la que se obtienen los mensajes</param>
            <returns>la cadena con información del mensaje de error</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout">
            <summary>
            Enumeración de los tiempos de espera que se pueden usar con la clase <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute"/>.
            El tipo de enumeración debe coincidir
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout.Infinite">
            <summary>
            Infinito.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute">
            <summary>
            Atributo de clase de prueba.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.GetTestMethodAttribute(Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute)">
            <summary>
            Atributo para obtener el método de prueba.
            </summary>
            <param name="testMethodAttribute">
            Atributo del método de prueba.
            </param>
            <returns>
 <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute"/>.
            </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute">
            <summary>
            Atributo del método de prueba.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.Execute(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod)">
            <summary>
            Punto de extensión UTF para ejecutar pruebas.
            </summary>
            <param name="testMethod"> TestMethod para ejecutar. </param>
            <returns> Resultados de pruebas </returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute">
            <summary>
            Atributo para inicializar la prueba.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute">
            <summary>
            Atributo de limpieza de pruebas.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute">
            <summary>
            Atributo de omisión.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute">
            <summary>
            Atributo de propiedad de la prueba.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute"/>.
            </summary>
            <param name="name">
            El nombre.
            </param>
            <param name="value">
            El valor.
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Name">
            <summary>
            Obtiene el nombre.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute.Value">
            <summary>
            Obtiene el valor.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute">
            <summary>
            Atributo de inicialización de la clase.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute">
            <summary>
            Atributo de limpieza de la clase.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyInitializeAttribute">
            <summary>
            Atributo de inicialización del ensamblado.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.AssemblyCleanupAttribute">
            <summary>
            Atributo de limpieza del ensamblado.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute">
            <summary>
            Propietario de la prueba
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute"/>.
            </summary>
            <param name="owner">
            El propietario.
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.OwnerAttribute.Owner">
            <summary>
            Obtiene el propietario.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute">
            <summary>
            Atributo de prioridad. Se usa para especificar la prioridad de una prueba unitaria.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute"/>.
            </summary>
            <param name="priority">
            La prioridad.
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.PriorityAttribute.Priority">
            <summary>
            Obtiene la prioridad.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute">
            <summary>
            Descripción de la prueba
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute"/> class to describe a test.
            </summary>
            <param name="description">La descripción.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute.Description">
            <summary>
            Obtiene la descripción de una prueba.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute">
            <summary>
            URI de estructura de proyectos CSS
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute"/> class for CSS Project Structure URI.
            </summary>
            <param name="cssProjectStructure">URI de estructura de proyectos de CSS.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssProjectStructureAttribute.CssProjectStructure">
            <summary>
            Obtiene el URI de estructura de proyectos de CSS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute">
            <summary>
            URI de iteración CSS
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute"/> class for CSS Iteration URI.
            </summary>
            <param name="cssIteration">URI de iteración de CSS.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.CssIterationAttribute.CssIteration">
            <summary>
            Obtiene el URI de iteración de CSS.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute">
            <summary>
            Atributo WorkItem. Se usa para especificar un elemento de trabajo asociado a esta prueba.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute"/> class for the WorkItem Attribute.
            </summary>
            <param name="id">Identificador de un elemento de trabajo.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.WorkItemAttribute.Id">
            <summary>
            Obtiene el identificador para un elemento de trabajo asociado.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute">
            <summary>
            Atributo de tiempo de espera. Se usa para especificar el tiempo de espera de una prueba unitaria.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute"/>.
            </summary>
            <param name="timeout">
            Tiempo de espera.
            </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.#ctor(Microsoft.VisualStudio.TestTools.UnitTesting.TestTimeout)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute"/> class with a preset timeout
            </summary>
            <param name="timeout">
            Tiempo de espera
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TimeoutAttribute.Timeout">
            <summary>
            Obtiene el tiempo de espera.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult">
            <summary>
            Objeto TestResult que se va a devolver al adaptador.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.DisplayName">
            <summary>
            Obtiene o establece el nombre para mostrar del resultado. Es útil cuando se devuelven varios resultados.
            Si es NULL, el nombre del método se usa como nombre para mostrar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.Outcome">
            <summary>
            Obtiene o establece el resultado de la ejecución de pruebas.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.TestFailureException">
            <summary>
            Obtiene o establece la excepción que se inicia cuando la prueba genera un error.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.LogOutput">
            <summary>
            Obtiene o establece la salida del mensaje registrado por el código de la prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.LogError">
            <summary>
            Obtiene o establece la salida del mensaje registrado por el código de la prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.DebugTrace">
            <summary>
            Obtiene o establece el seguimiento de la depuración por código de prueba.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.Duration">
            <summary>
            Obtiene o establece la duración de la ejecución de las pruebas.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.DatarowIndex">
            <summary>
            Gets or sets the data row index in data source. Set only for results of individual
            run of data row of a data driven test.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.ReturnValue">
            <summary>
            Obtiene o establece el valor devuelto del método de prueba. (Actualmente es siempre NULL).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult.ResultFiles">
            <summary>
            Gets or sets the result files attached by the test.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute">
            <summary>
            Especifica la cadena de conexión, el nombre de tabla y el método de acceso a fila para las pruebas controladas por datos.
            </summary>
            <example>
            [DataSource("Provider=SQLOLEDB.1;Data Source=source;Integrated Security=SSPI;Initial Catalog=EqtCoverage;Persist Security Info=False", "MyTable")]
            [DataSource("dataSourceNameFromConfigFile")]
            </example>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultProviderName">
            <summary>
            Nombre de proveedor predeterminado para el origen de datos.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DefaultDataAccessMethod">
            <summary>
            Método de acceso a datos predeterminado.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String,System.String,Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute"/>. Esta instancia se inicializará con un proveedor de datos, una cadena de conexión, una tabla de datos y un método de acceso a datos para acceder al origen de datos.
            </summary>
            <param name="providerInvariantName">Nombre invariable del proveedor de datos, como System.Data.SqlClient</param>
            <param name="connectionString">
            Data provider specific connection string.
            WARNING: The connection string can contain sensitive data (for example, a password).
            The connection string is stored in plain text in source code and in the compiled assembly.
            Restrict access to the source code and assembly to protect this sensitive information.
            </param>
            <param name="tableName">Nombre de la tabla de datos.</param>
            <param name="dataAccessMethod">Especifica el orden de acceso a los datos.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute"/>. Esta instancia se inicializará con una cadena de conexión y un nombre de tabla.
            Especifique la cadena de conexión y la tabla de datos para acceder al origen de datos OLEDB.
            </summary>
            <param name="connectionString">
            Data provider specific connection string.
            WARNING: The connection string can contain sensitive data (for example, a password).
            The connection string is stored in plain text in source code and in the compiled assembly.
            Restrict access to the source code and assembly to protect this sensitive information.
            </param>
            <param name="tableName">Nombre de la tabla de datos.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute"/>. Esta instancia se inicializará con un proveedor de datos y una cadena de conexión que se asocian al nombre del valor de configuración.
            </summary>
            <param name="dataSourceSettingName">El nombre de un origen de datos que se encuentra en la sección &lt;microsoft.visualstudio.qualitytools&gt; del archivo app.config.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ProviderInvariantName">
            <summary>
            Obtiene un valor que representa el proveedor de datos del origen de datos.
            </summary>
            <returns>
            Nombre del proveedor de datos. Si no se designó un proveedor de datos al inicializar el objeto, se devolverá el proveedor predeterminado de System.Data.OleDb.
            </returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.ConnectionString">
            <summary>
            Obtiene un valor que representa la cadena de conexión para el origen de datos.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.TableName">
            <summary>
            Obtiene un valor que indica el nombre de la tabla que proporciona los datos.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataAccessMethod">
             <summary>
             Gets the method used to access the data source.
             </summary>
            
             <returns>
             One of the <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod"/> . Si <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute"/> no se ha inicializado, devolverá el valor predeterminado <see cref="F:Microsoft.VisualStudio.TestTools.UnitTesting.DataAccessMethod.Random"/>.
             </returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UnitTesting.DataSourceAttribute.DataSourceSettingName">
            <summary>
            Gets the name of a data source found in the &lt;microsoft.visualstudio.qualitytools&gt; section in the app.config file.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UnitTesting.DataTestMethodAttribute">
            <summary>
            Atributo para una prueba controlada por datos donde los datos pueden especificarse alineados.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataTestMethodAttribute.Execute(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod)">
            <summary>
            Buscar todas las filas de datos y ejecutar.
            </summary>
            <param name="testMethod">
            El método de prueba.
            </param>
            <returns>
            An array of <see cref="T:Microsoft.VisualStudio.TestTools.UnitTesting.TestResult"/>.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UnitTesting.DataTestMethodAttribute.RunDataDrivenTest(Microsoft.VisualStudio.TestTools.UnitTesting.ITestMethod,Microsoft.VisualStudio.TestTools.UnitTesting.DataRowAttribute[])">
            <summary>
            Ejecutar método de prueba controlada por datos.
            </summary>
            <param name="testMethod"> Método de prueba para ejecutar. </param>
            <param name="dataRows"> Fila de datos. </param>
            <returns> Resultados de la ejecución. </returns>
        </member>
    </members>
</doc>
